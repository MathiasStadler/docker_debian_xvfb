# https://docs.docker.com/build/guide/multi-stage/

FROM debian:stable-slim

ENV container=docker
STOPSIGNAL SIGRTMIN+3
VOLUME [ "/tmp", "/run", "/run/lock" ]
WORKDIR /

# FROM HERE
# https://www.cyberciti.biz/faq/perl-warning-setting-locale-failed-in-debian-ubuntu/
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_CTYPE="en_US.UTF-8" \
    LC_NUMERIC="en_US.UTF-8" \
    LC_TIME="en_US.UTF-8" \
    LC_COLLATE="en_US.UTF-8" \
    LC_MONETARY="en_US.UTF-8" \
    LC_MESSAGES="en_US.UTF-8" \
    LC_PAPER="en_US.UTF-8" \
    LC_NAME="en_US.UTF-8" \
    LC_ADDRESS="en_US.UTF-8" \
    LC_TELEPHONE="en_US.UTF-8" \
    LC_MEASUREMENT="en_US.UTF-8" \
    LC_IDENTIFICATION="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"

# avoid user interaction
ARG DEBIAN_FRONTEND=noninteractive 

# CONFIGURE SHELL
SHELL ["/usr/bin/bash", "-c"]

# RUN --mount=type=cache,target=/var/cache/apt \
#    --mount=type=cache,target=/var/lib/apt \
#    apt-get update --yes

# set language first
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    set -euxo \
    && apt-get update --yes \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends --no-install-suggests --yes --quiet --quiet  apt-utils \
    locales \
    apt-transport-https \
    apt-utils \
    locales \
    locales-all


# RUN --mount=type=cache,target=/var/cache/apt \
#    --mount=type=cache,target=/var/lib/apt \
#    set -euxo \
#    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends --no-install-suggests --yes --quiet --quiet locales \
#    locales-all   

RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    set -euxo \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends --no-install-suggests --yes --quiet --quiet lxde-core \
    lxde-icon-theme \
    lxsession-default-apps \
    lxterminal \
    net-tools \
    notification-daemon \
    x11-apps \
    x11-utils \
    x11vnc \
    x11-xserver-utils \
    xdg-utils \
    xorgxrdp \
    xrdp \
    xvfb \
    openssh-server \
    sudo \
    && rm /etc/xrdp/rsakeys.ini /etc/xrdp/cert.pem /etc/xrdp/key.pem \
    && mv /usr/bin/lxpolkit /usr/bin/lxpolkit.disabled \
    && apt-get --yes autoclean \ 
    && apt-get --yes --auto-remove autoremove \
    && apt-get clean --yes \
    && rm --recursive --force /var/lib/apt/lists/* 


# chromiun
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    set -euxo \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends --no-install-suggests --yes --quiet --quiet lxde-core \
    chromium \
    chromium-driver   
# \
# && rm -rf /var/cache/apt/archives /var/lib/apt/lists

# FROM HERE
# https://askubuntu.com/questions/1050800/how-do-i-remove-the-apt-package-index

# # new user
ENV PUID='1000' \
    PGID='1000' \
    USER='user'

# useradd and suoers
RUN set -euxo \ 
    && groupadd --gid "$PGID" "$USER"  \
    && useradd --home-dir /home/$USER --shell /bin/bash --uid "$PUID" --gid "$PGID" "$USER"  \
    && mkdir /home/$USER \
    && chown -R $USER:$USER /home/$USER  \
    && usermod -aG sudo "$USER"  \
    && usermod -aG adm "$USER"  \
    && usermod -aG audio "$USER"  \
    && cp /etc/skel/.bashrc /home/user/  \
    && mkdir -p /etc/sudoers.d  \
    && echo "user ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/"${USER}" \
    && chmod 0440 /etc/sudoers.d/"$USER" \
    && cp /etc/skel/.bashrc /home/${USER}

COPY scripts/bootstrap.sh /scripts/
# copy desktop and terminal settings
COPY desktop_settings/desktop-items-0.conf  /root/.config/pcmanfm/LXDE/desktop-items-0.conf
COPY desktop_settings/lxterminal.conf  /root/.config/lxterminal/lxterminal.conf

# 





# FROM HERE
# https://dev.to/s1ntaxe770r/how-to-setup-ssh-within-a-docker-container-i5i
# RUN service ssh start
EXPOSE 22
# CMD ["[ -d /var/run/sshd ] || mkdir -p -m0755 /var/run/sshd && /usr/sbin/sshd","-D"]


ENTRYPOINT ["/bin/bash"]


# remove empty space
# :g/^ /norm dw
# sort
# cat /tmp/t.txt |sort

# docker buildx build --progress=plain -t debian_stage -f Dockerfile_debian_xvfb_stage "."

# docker run -it --hostname stage debian_stage bash
